# Copyright 2014 OpenStack Foundation
#
#    Licensed under the Apache License, Version 2.0 (the "License"); you may
#    not use this file except in compliance with the License. You may obtain
#    a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#    WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#    License for the specific language governing permissions and limitations
#    under the License.
#

"""Added servicechain tables

Revision ID: 2a8482e506b4
Revises: 4e0b972181bd
Create Date: 2014-11-07 06:38:25.796195

"""

# revision identifiers, used by Alembic.
revision = '2a8482e506b4'
down_revision = '4e0b972181bd'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql



def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('service_chain_pools',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('sf_sc_identifier', sa.String(length=36), nullable=True),
    sa.Column('sf_port_id_begin', sa.Integer(), nullable=False),
    sa.Column('sf_port_id_end', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_function_instances',
    sa.Column('tenant_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('device_id', sa.String(length=256), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('admin_state', sa.String(length=16), nullable=True),
    sa.Column('fault_policy', sa.String(length=16), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_traffic_classifiers',
    sa.Column('tenant_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('ports', sa.String(length=2560), nullable=False),
    sa.Column('list_hosts', sa.String(length=5120), nullable=True),
    sa.Column('list_ports', sa.String(length=2608), nullable=True),
    sa.Column('classification_type', sa.String(length=36), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_function_groups',
    sa.Column('tenant_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('description', sa.String(length=1024), nullable=True),
    sa.Column('type', sa.String(length=36), nullable=True),
    sa.Column('method', sa.String(length=64), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_chains',
    sa.Column('tenant_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('direction', sa.String(length=16), nullable=True),
    sa.Column('chain_id', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('catenated_chain', sa.String(length=64), nullable=True),
    sa.Column('destination_context', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=32), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('port_flows',
    sa.Column('tenant_id', sa.String(length=255), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('host_id', sa.String(length=255), nullable=False),
    sa.Column('chain_id', sa.Integer(), nullable=False),
    sa.Column('in_port', sa.Integer(), nullable=True),
    sa.Column('in_port_uuid', sa.String(length=64), nullable=True),
    sa.Column('outer_dl_src', sa.String(length=64), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('sf_port_list', sa.String(length=30000), nullable=True),
    sa.Column('fault_policy', sa.String(length=64), nullable=True),
    sa.Column('breakout_dl_src', sa.String(length=64), nullable=True),
    sa.Column('breakout_dl_dst', sa.String(length=64), nullable=True),
    sa.Column('service_chain_id', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=16), nullable=True),
    sa.Column('hash_policy', sa.String(length=64), nullable=True),
    sa.Column('chain_direction', sa.String(length=16), nullable=True),
    sa.Column('in_port_pair', sa.String(length=600), nullable=True),
    sa.Column('instance_state', sa.String(length=16), nullable=True),
    sa.Column('history_portlist', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['service_chain_id'], ['service_chains.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_chain_availability_ranges',
    sa.Column('allocation_pool_id', sa.String(length=36), nullable=False),
    sa.Column('sf_sc_identifier', sa.String(length=36), nullable=False),
    sa.Column('sf_port_id_begin', sa.Integer(), nullable=False),
    sa.Column('sf_port_id_end', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['allocation_pool_id'], ['service_chain_pools.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('allocation_pool_id', 'sf_port_id_begin', 'sf_port_id_end'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_chain_allocations',
    sa.Column('port_id', sa.String(length=36), nullable=True),
    sa.Column('sf_sc_id', sa.String(length=36), nullable=False),
    sa.Column('sf_sc_identifier', sa.String(length=36), nullable=False),
    sa.Column('sf_port_id', sa.Integer(), nullable=False),
    sa.Column('allocation_pool_id', sa.String(length=36), nullable=False),
    sa.ForeignKeyConstraint(['allocation_pool_id'], ['service_chain_pools.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sf_sc_id', 'sf_sc_identifier', 'sf_port_id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_instance_contexts',
    sa.Column('service_function_instance_id', sa.String(length=36), nullable=False),
    sa.Column('host_id', sa.String(length=255), nullable=False),
    sa.Column('user_side_port', sa.String(length=64), nullable=False),
    sa.Column('user_side_action', sa.String(length=128), nullable=True),
    sa.Column('user_side_sf_port_id', sa.Integer(), nullable=True),
    sa.Column('network_side_port', sa.String(length=64), nullable=False),
    sa.Column('network_side_action', sa.String(length=128), nullable=True),
    sa.Column('network_side_sf_port_id', sa.Integer(), nullable=True),
    sa.Column('classification_type', sa.String(length=64), nullable=True),
    sa.ForeignKeyConstraint(['service_function_instance_id'], ['service_function_instances.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_function_instance_id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_traffic_classifier_bind_chains',
    sa.Column('service_chain_id', sa.String(length=255), nullable=False),
    sa.Column('service_traffic_classifier_id', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['service_chain_id'], ['service_chains.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_traffic_classifier_id'], ['service_traffic_classifiers.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_chain_id', 'service_traffic_classifier_id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_function_paths',
    sa.Column('service_chain_id', sa.String(length=36), nullable=False),
    sa.Column('service_function_group_id', sa.String(length=255), nullable=False),
    sa.Column('hop_index', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['service_chain_id'], ['service_chains.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['service_function_group_id'], ['service_function_groups.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('service_chain_id', 'service_function_group_id'),
    mysql_engine='InnoDB'
    )
    op.create_table('service_function_group_binding_instances',
    sa.Column('instance_id', sa.String(length=255), nullable=False),
    sa.Column('group_id', sa.String(length=255), nullable=False),
    sa.Column('weight', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['service_function_groups.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['instance_id'], ['service_function_instances.id'], ),
    sa.PrimaryKeyConstraint('instance_id', 'group_id'),
    mysql_engine='InnoDB'
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###

    op.drop_table('service_function_group_binding_instances')
    op.drop_table('service_function_paths')
    op.drop_table('service_traffic_classifier_bind_chains')
    op.drop_table('service_instance_contexts')
    op.drop_table('service_chain_allocations')
    op.drop_table('service_chain_availability_ranges')
    op.drop_table('port_flows')
    op.drop_table('service_chains')
    op.drop_table('service_function_groups')
    op.drop_table('service_traffic_classifiers')
    op.drop_table('service_function_instances')
    op.drop_table('service_chain_pools')
    ### end Alembic commands ###
